<?phpinclude_once("dbconfig.php");include_once("functions.php");function addCalendar($st, $et, $sub, $ade) {    $ret = array();    try {        $objDB = new DBConnection();        $pdo = $db->getConnection();        $sql = $pdo->prepare('INSERT INTO `wdcalendar`(`subject`, `starttime`, `endtime`, `isalldayevent`) VALUES(:subject, :starttime, :endtime, :isalldayevent)');        $arr_data = array(            ':subject' => $sub,            ':starttime' => php2MySqlTime(js2PhpTime($st)),            ':endtime' => php2MySqlTime(js2PhpTime($et)),            ':isalldayevent' => $ade        );        $sql->execute($arr_data);        $ret['IsSuccess'] = true;        $ret['Msg'] = 'add success';        $ret['Data'] = $pdo->lastInsertId('id');    } catch (Exception $e) {        $ret['IsSuccess'] = false;        $ret['Msg'] = $e->getMessage();    }    return $ret;}function addDetailedCalendar($st, $et, $sub, $ade, $dscr, $loc, $color, $tz) {    $ret = array();    try {        $objDB = new DBConnection();        $pdo = $db->getConnection();        $sql = $pdo->prepare('INSERT INTO `wdcalendar`(`subject`, `starttime`, `endtime`, `isalldayevent`, `description`, `location`, `color`) VALUES(:subject, :starttime, :endtime, :isalldayevent, :description, :location, :color)');        $arr_data = array(            ':subject' => $sub,            ':starttime' => php2MySqlTime(js2PhpTime($st)),            ':endtime' => php2MySqlTime(js2PhpTime($et)),            ':isalldayevent' => $ade,            ':description' => $dscr,            ':location' => $loc,            ':color' => $color        );        $sql->execute($arr_data);        $ret['IsSuccess'] = true;        $ret['Msg'] = 'add success';        $ret['Data'] = $pdo->lastInsertId('id');    } catch (Exception $e) {        $ret['IsSuccess'] = false;        $ret['Msg'] = $e->getMessage();    }    return $ret;}function listCalendarByRange($sd, $ed) {    $ret = array();    $ret['events'] = array();    $ret['issort'] = true;    $ret['start'] = php2JsTime($sd);    $ret['end'] = php2JsTime($ed);    $ret['error'] = null;    try {        $objDB = new DBConnection();        $pdo = $objDB->getConnection();        $sql = $pdo->prepare('SELECT * FROM `wdcalendar` WHERE `starttime` BETWEEN :startdate AND :enddate');        $sql->execute(array(            ':starttime' => php2MySqlTime($sd),            ':enddate' => php2MySqlTime($ed)        ));        while ($row = $sql->fetch(PDO::FETCH_OBJ)) {            $ret['events'][] = array(                $row->id,                $row->subject,                php2JsTime(mySql2PhpTime($row->starttime)),                php2JsTime(mySql2PhpTime($row->endtime)),                $row->isalldayevent,                0,                0,                $row->color,                1,                $row->location,            );        }    } catch (Exception $e) {        $ret['error'] = $e->getMessage();    }    return $ret;}function listCalendar($day, $type) {    $phpTime = js2PhpTime($day);    switch ($type) {        case 'month':            $st = mktime(0, 0, 0, date('m', $phpTime), 1, date('Y', $phpTime));            $et = mktime(0, 0, -1, date('m', $phpTime) + 1, 1, date('Y', $phpTime));            break;        case 'week':            $monday = date('d', $phpTime) - date('N', $phpTime) + 1;            $st = mktime(0, 0, 0, date('m', $phpTime), $monday, date('Y', $phpTime));            $et = mktime(0, 0, -1, date('m', $phpTime), $monday + 7, date('Y', $phpTime));            break;        case 'day':            $st = mktime(0, 0, 0, date('m', $phpTime), date('d', $phpTime), date('Y', $phpTime));            $et = mktime(0, 0, -1, date('m', $phpTime), date('d', $phpTime) + 1, date('Y', $phpTime));            break;    }    return listCalendarByRange($st, $et);}function updateCalendar($id, $st, $et) {    $ret = array();    try {        $objDB = new DBConnection();        $pdo = $objDB->getConnection();        $sql = $pdo->prepare('UPDATE `wdcalendar` SET `starttime` = :strattime, `endtime` = :endtime WHERE `id` = :id');        $sql->execute(array(            ':strattime' => php2MySqlTime(js2PhpTime($st)),            ':endtime' => php2MySqlTime(js2PhpTime($et)),            ':id' => $id        ));        $ret['IsSuccess'] = true;        $ret['Msg'] = 'Succefully';    } catch (Exception $e) {        $ret['IsSuccess'] = false;        $ret['Msg'] = $e->getMessage();    }    return $ret;}function updateDetailedCalendar($id, $st, $et, $sub, $ade, $dscr, $loc, $color, $tz) {    $ret = array();    try {        $objDB = new DBConnection();        $pdo = $objDB->getConnection();        $sql = $pdo->prepare('UPDATE `wdcalendar` SET `starttime` = :strattime, `endtime` = :endtime, `subject` = :subject, `isalldayevent` = :isalldayevent, `description` = :description, `location` = :location, `color` = :color WHERE `id`=:id');        $sql->execute(array(            ':starttime' => php2MySqlTime(js2PhpTime($st)),            ':endtime' => php2MySqlTime(js2PhpTime($et)),            ':subject' => $sub,            ':isalldayevent' => $ade,            ':description' => $dscr,            ':location' => $loc,            ':color' => $color,            ':id' => $id        ));        $ret['IsSuccess'] = true;        $ret['Msg'] = 'Succefully';    } catch (Exception $e) {        $ret['IsSuccess'] = false;        $ret['Msg'] = $e->getMessage();    }    return $ret;}function removeCalendar($id) {    $ret = array();    try {        $objDB = new DBConnection();        $pdo = $objDB->getConnection();        $sql = $pdo->prepare("DELETE FROM `wdcalendar` WHERE `id` = ?");        $sql->execute(array($id));        $ret['IsSuccess'] = true;        $ret['Msg'] = 'Succefully';    } catch (Exception $e) {        $ret['IsSuccess'] = false;        $ret['Msg'] = $e->getMessage();    }    return $ret;}header('Content-type:text/javascript;charset=UTF-8');$method = filter_input(INPUT_GET, 'method', FILTER_SANITIZE_STRING);$post = filter_input_array(INPUT_POST, FILTER_SANITIZE_STRING);switch ($method) {    case 'add':        $ret = addCalendar($post['CalendarStartTime'], $post['CalendarEndTime'], $post['CalendarTitle'], $post['IsAllDayEvent']);        break;    case 'list':        $ret = listCalendar($post['showdate'], $post['viewtype']);        break;    case 'update':        $ret = updateCalendar($post['calendarId'], $post['CalendarStartTime'], $post['CalendarEndTime']);        break;    case 'remove':        $ret = removeCalendar($post['calendarId']);        break;    case 'adddetails':        $id = filter_input(INPUT_GET, 'id', FILTER_SANITIZE_STRING);        $st = $post['stpartdate'] . ' ' . $post['stparttime'];        $et = $post['etpartdate'] . ' ' . $post['etparttime'];        if (!empty($id)) {            $ret = updateDetailedCalendar($id, $st, $et, $post['Subject'], isset($post['IsAllDayEvent']) ? 1 : 0, $post['Description'], $post['Location'], $post['colorvalue'], $post['timezone']);        } else {            $ret = addDetailedCalendar($st, $et, $post['Subject'], isset($post['IsAllDayEvent']) ? 1 : 0, $post['Description'], $post['Location'], $post['colorvalue'], $post['timezone']);        }        break;}echo json_encode($ret);